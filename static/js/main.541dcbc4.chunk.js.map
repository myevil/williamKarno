{"version":3,"sources":["Tools/api.js","Component/Product/Item.jsx","Component/Product/ListProduct.jsx","Component/ShoppingCart/ShoppingCart.jsx","Component/HomePage.jsx","serviceWorker.js","index.js"],"names":["header","Headers","append","checkStatusResponseAPI","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","isStatus200","error","responseJson","wrap","_context","prev","next","status","Error","statusText","json","sent","abrupt","stop","this","_x","apply","arguments","getFetch","path","Promise","resolve","reject","fetch","concat","method","headers","then","catch","err","alert","Item","dataProduct","total","quantity","props","handleAddShoppingCartData","_this","data","image","name","price","currency","react_default","createElement","className","src","alt","onClick","handleAddCart","Component","ListProduct","React","memo","Fragment","Product_Item","ShoppingCart","e","changeProductCart","target","value","handleChangeQuantity","deletedProduct","handleDeleteProduct","length","map","CartData","key","handleDeleteProductOnCart","width","height","type","onChange","HomePage","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","shoppingCartData","bind","assertThisInitialized","inherits","createClass","_this2","resp","setState","productCartObject","filter","push","selectProduct","productAfterDeleted","_this$state","Product_ListProduct","style","margin","Component_ShoppingCart_ShoppingCart","Boolean","window","location","hostname","match","ReactDOM","render","Component_HomePage","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.541dcbc4.chunk.js","sourcesContent":["const header = new Headers();\r\nheader.append('Accept', 'application/json');\r\nheader.append('Content-Type', 'application/json');\r\n\r\nconst getMethods = () => ({\r\n  method: 'GET',\r\n  headers: header,\r\n});\r\n\r\nconst checkStatusResponseAPI = async (response) => {\r\n  const isStatus200 = () => {\r\n    if (response.status === 200) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  let error = new Error(response.statusText);\r\n\r\n  if (isStatus200()) {\r\n    const responseJson = await response.json();\r\n      return responseJson;\r\n  }\r\n  throw error;\r\n};\r\n\r\nexport const getFetch = path => new Promise((resolve, reject) => {\r\n  fetch(`${path}`, getMethods())\r\n    .then(checkStatusResponseAPI)\r\n    .then((responseJson) => {\r\n      resolve(responseJson);\r\n    })\r\n    .catch((err) => {\r\n      alert(err);\r\n    });\r\n});\r\n","import React, { Component } from 'react'\r\n\r\nclass Item extends Component {\r\n  handleAddCart(dataProduct) {\r\n    dataProduct.total = 0;\r\n    dataProduct.quantity = 0;\r\n    this.props.handleAddShoppingCartData(dataProduct);\r\n  }\r\n\r\n  render() {\r\n    const {data} = this.props;\r\n    const {image, name, price, currency} = data;\r\n    return (\r\n      <div className={\"scss-list-item\"}>\r\n        <div className={\"border\"}>\r\n          <img src={image} alt='list-product'/>\r\n        </div>\r\n        <div className={'display'}>\r\n          <div className={'grow'}>\r\n            <p className={'product-title'}>{name}</p>\r\n            <span>{currency} {price}</span>\r\n          </div>\r\n          <button\r\n            className=\"product-button\"\r\n            onClick={() => this.handleAddCart(data)}\r\n          >\r\n            Add to cart\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Item\r\n","import React from 'react'\r\nimport Item from './Item';\r\n\r\nconst ListProduct = React.memo(props => {\r\n  const { data, handleAddShoppingCartData } = props;\r\n  return (\r\n    <React.Fragment>\r\n      <div className={'scss-grid-md-3'}>\r\n        {data && <Item\r\n          data={data[1]}\r\n          handleAddShoppingCartData={handleAddShoppingCartData}\r\n        />}\r\n        {data && <Item\r\n          data={data[2]}\r\n          handleAddShoppingCartData={handleAddShoppingCartData}\r\n        />}\r\n      </div>\r\n      <div className='scss-grid-md-6'>\r\n        {data && <Item\r\n          data={data[0]}\r\n          handleAddShoppingCartData={handleAddShoppingCartData}\r\n        />}\r\n      </div>\r\n      <div className='scss-grid-md-3'>\r\n        {data && <Item\r\n          data={data[3]}\r\n          handleAddShoppingCartData={handleAddShoppingCartData}\r\n        />}\r\n        {data && <Item\r\n          data={data[4]}\r\n          handleAddShoppingCartData={handleAddShoppingCartData}\r\n        />}\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n})\r\n\r\nexport default ListProduct\r\n","import React, { Component } from 'react'\r\n\r\nclass ShoppingCart extends Component {\r\n\r\n  handleChangeQuantity(e: SyntheticEvent<HTMLInputElement>, changeProductCart: object) {\r\n    if(e.target.value >= 0){\r\n      changeProductCart.quantity = e.target.value;\r\n      changeProductCart.total = changeProductCart.quantity * changeProductCart.price;\r\n      this.props.handleChangeQuantity(changeProductCart);\r\n    }\r\n  }\r\n\r\n  handleDeleteProductOnCart(deletedProduct: object){\r\n    this.props.handleDeleteProduct(deletedProduct);\r\n  }\r\n\r\n  render() {\r\n    const {ShoppingCart} = this.props\r\n    return (\r\n      <React.Fragment>\r\n        {ShoppingCart.length !== 0 ? ShoppingCart.map(CartData => {\r\n          return (\r\n            <tr key={CartData.name}>\r\n              <td>\r\n                <button onClick={() => this.handleDeleteProductOnCart(CartData)}>close</button>\r\n              </td>\r\n              <td>\r\n                <img src={CartData.image} width='50px' height='50' alt='product'/>\r\n                <span>{CartData.name}</span>\r\n              </td>\r\n              <td>{CartData.price}</td>\r\n              <td>\r\n                <input\r\n                  type='number'\r\n                  value={CartData.quantity}\r\n                  onChange={e => this.handleChangeQuantity(e, CartData)}\r\n                />\r\n              </td>\r\n              <td>{CartData.total}</td>\r\n            </tr>\r\n          )\r\n        }) : <td>no data</td>}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ShoppingCart\r\n","import React, { Component } from 'react'\r\nimport { getFetch } from '../Tools/api';\r\nimport '../Scss/HomePage.scss';\r\nimport ListProduct from './Product/ListProduct';\r\nimport ShoppingCart from './ShoppingCart/ShoppingCart';\r\n\r\ntype State = {\r\n  data: Array<Object>,\r\n  shoppingCartData: Array<Object>,\r\n}\r\n\r\nexport class HomePage extends Component<State> {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      data: null,\r\n      shoppingCartData: [],\r\n    }\r\n    this.handleAddShoppingCartData = this.handleAddShoppingCartData.bind(this);\r\n    this.handleChangeQuantity = this.handleChangeQuantity.bind(this);\r\n    this.handleDeleteProduct = this.handleDeleteProduct.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    getFetch('http://s3.irvinsaltedegg.com.s3-ap-southeast-1.amazonaws.com/engineering-test/products.json')\r\n      .then(resp => {\r\n        this.setState({\r\n          data: resp.data,\r\n        })\r\n      })\r\n  }\r\n\r\n  handleAddShoppingCartData(productCartObject) {\r\n    const { shoppingCartData } = this.state;\r\n    const productAlreadyHaveInCart = shoppingCartData.filter(data => data.name === productCartObject.name);\r\n    if(productAlreadyHaveInCart.length === 0){\r\n      shoppingCartData.push(productCartObject);\r\n      this.setState({\r\n        shoppingCartData,\r\n      })\r\n    } else {\r\n      alert('product already have in the cart');\r\n    }\r\n  }\r\n\r\n  handleChangeQuantity(productCartObject){\r\n    const {shoppingCartData} = this.state;\r\n    const selectProduct = shoppingCartData.filter(data => data.name !== productCartObject.name);\r\n    selectProduct.push(productCartObject);\r\n    this.setState({\r\n      shoppingCartData: selectProduct,\r\n    })\r\n  }\r\n\r\n  handleDeleteProduct(deletedProduct){\r\n    const {shoppingCartData} = this.state;\r\n    const productAfterDeleted = shoppingCartData.filter(data => data.name !== deletedProduct.name);\r\n    this.setState({\r\n      shoppingCartData: productAfterDeleted,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {data, shoppingCartData} = this.state;\r\n    return (\r\n      <div className='scss-homepage-container'>\r\n        <div className='scss-product-container'>\r\n          {data && <ListProduct\r\n            handleAddShoppingCartData={this.handleAddShoppingCartData}\r\n            data={data}\r\n          />}\r\n        </div>\r\n        <h3 className='scss-shopping-cart-title'> SHOPPING CART - {shoppingCartData.length} items</h3>\r\n        {data && <div style={{margin: '0 100px'}}>\r\n          <table className='scss-shopping-cart'>\r\n            <thead>\r\n              <tr>\r\n                <th>&nbsp;</th>\r\n                <th>product</th>\r\n                <th>price</th>\r\n                <th>quantity</th>\r\n                <th>total</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <ShoppingCart\r\n                ShoppingCart={shoppingCartData}\r\n                handleChangeQuantity={this.handleChangeQuantity}\r\n                handleDeleteProduct={this.handleDeleteProduct}\r\n              />\r\n            </tbody>\r\n          </table>\r\n        </div>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HomePage\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport HomePage from './Component/HomePage';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<HomePage />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}